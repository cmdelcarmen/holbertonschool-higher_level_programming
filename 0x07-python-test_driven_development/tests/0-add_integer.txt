Test file for 0-add_integer.py.

File contains:

add_integer(a, b=98): Function takes two numbers and returns the sum.
=====================================================================

>>> add = __import__('0-add_integer').add_integer

Regular use:
------------
>>> add(1, 2)
3

>>> add(1.5, 2)
3

>>> add(1, 2.5)
3

>>> add(1.5, 2.5)
3

Wrong type or wrong amount of values passed:
-------------------------
>>> add(3, "b")
Traceback (most recent call last):
....
TypeError: b must be an integer

>>> add("TypeErrorTest", 2)
Traceback (most recent call last):
....
TypeError: a must be an integer

>>> add(1, "TypeErrorTest")
Traceback (most recent call last):
....
TypeError: b must be an integer

>>> add(1)
99

>>> add(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add(1, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add(None, 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add(float('inf'), 2)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add(1, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add(float('nan'), 2)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

>>> add(1, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

